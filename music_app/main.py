import os
import shutil
import pygame
import argparse
import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from PIL import Image, ImageTk

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ—Å–∏—Å—Ç–µ–º—ã
pygame.mixer.init()

# –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def play_music(file_path):
    try:
        if not os.path.exists(file_path):
            raise FileNotFoundError(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        pygame.mixer.music.load(file_path)
        pygame.mixer.music.play()
        print(f"–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: {file_path}")
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è", str(e))

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def save_music(source_path, destination_path):
    try:
        if not os.path.exists(source_path):
            raise FileNotFoundError(f"–ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {source_path}")
        shutil.copy(source_path, destination_path)
        print(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {destination_path}")
    except Exception as e:
        messagebox.showerror("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è", str(e))

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–∫–∞
def get_track_length(file_path):
    try:
        sound = pygame.mixer.Sound(file_path)
        return sound.get_length()
    except Exception:
        return 0

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∫–æ–Ω–∫–∏ —Å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ–º
def load_icon(path, size=(24, 24)):
    try:
        img = Image.open(path)
        img = img.resize(size, Image.ANTIALIAS)
        return ImageTk.PhotoImage(img)
    except Exception:
        return None

# –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
def create_gui():
    try:
        from tkinterdnd2 import TkinterDnD, DND_FILES
        window = TkinterDnD.Tk()
        drag_enabled = True
    except ImportError:
        window = tk.Tk()
        drag_enabled = False
        print("Drag-and-drop –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω: tkinterdnd2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    window.title("–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä üéµ")
    window.geometry("700x500")
    window.configure(bg="#f0f0f0")

    # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    progress = tk.DoubleVar()
    progress_bar = ttk.Progressbar(window, variable=progress, maximum=100, length=500)
    progress_bar.pack(pady=20)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    def update_progress_bar(duration):
        if pygame.mixer.music.get_busy():
            current_pos = pygame.mixer.music.get_pos() / 1000  # –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã ‚Üí —Å–µ–∫—É–Ω–¥—ã
            if duration > 0:
                progress.set((current_pos / duration) * 100)
            window.after(500, lambda: update_progress_bar(duration))
        else:
            progress.set(0)

    # –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    def choose_file_to_play():
        file_path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª")
        if file_path:
            play_music(file_path)
            duration = get_track_length(file_path)
            progress.set(0)
            update_progress_bar(duration)

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    def choose_file_to_save():
        source_path = filedialog.askopenfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª")
        if source_path:
            destination_path = filedialog.asksaveasfilename(title="–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
            if destination_path:
                save_music(source_path, destination_path)

    # Drag-and-drop
    def drop(event):
        file_path = event.data.strip()
        if os.path.isfile(file_path):
            play_music(file_path)
            duration = get_track_length(file_path)
            progress.set(0)
            update_progress_bar(duration)

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∫–æ–Ω–æ–∫
    play_icon = load_icon("content/play_icon.png")
    save_icon = load_icon("content/save_icon.png")
    exit_icon = load_icon("content/exit_icon.png")

    # –ö–Ω–æ–ø–∫–∏
    play_button = tk.Button(window, text="‚ñ∂ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏", image=play_icon, compound="left",
                            command=choose_file_to_play, padx=10, pady=5)
    play_button.pack(pady=10)

    save_button = tk.Button(window, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", image=save_icon, compound="left",
                            command=choose_file_to_save, padx=10, pady=5)
    save_button.pack(pady=10)

    exit_button = tk.Button(window, text="‚ùå –í—ã—Ö–æ–¥", image=exit_icon, compound="left",
                            command=window.quit, padx=10, pady=5)
    exit_button.pack(pady=10)

    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è drag-and-drop
    if drag_enabled:
        window.drop_target_register(DND_FILES)
        window.dnd_bind('<<Drop>>', drop)

    window.mainloop()

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    parser = argparse.ArgumentParser(description="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏")
    subparsers = parser.add_subparsers(dest="command", help="–ö–æ–º–∞–Ω–¥—ã")

    play_parser = subparsers.add_parser("play", help="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª")
    play_parser.add_argument("file", help="–ü—É—Ç—å –∫ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É")

    save_parser = subparsers.add_parser("save", help="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª")
    save_parser.add_argument("source", help="–ò—Å—Ö–æ–¥–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É")
    save_parser.add_argument("destination", help="–ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞")

    gui_parser = subparsers.add_parser("gui", help="–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")

    args = parser.parse_args()

    if args.command == "play":
        play_music(args.file)
    elif args.command == "save":
        save_music(args.source, args.destination)
    elif args.command == "gui" or args.command is None:
        create_gui()
    else:
        parser.print_help()

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    main()
